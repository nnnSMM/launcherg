name: Test Build Workflow # ワークフロー名を変更

on:
  push:
    branches:
      - test

jobs:
  build-test: # ジョブ名を変更 (release から build-test などへ)
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # バージョン抽出と更新は test ブランチでは行わない
      # - name: Extract tag name
      #   id: variables
      #   run: echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      #   shell: bash

      # - name: Update package.version in tauri.conf.json
      #   run: |
      #     $json = Get-Content -Path "src-tauri\tauri.conf.json" -Raw | ConvertFrom-Json
      #     # ここで steps.variables.outputs.version を使うとブランチ名になるためエラーの原因だった
      #     # $json.package.version = "${{ steps.variables.outputs.version }}"
      #     # 代わりに固定値を使うか、tauri.conf.json の値をそのまま使う
      #     $json | ConvertTo-Json -Depth 100 | Set-Content -Path "src-tauri\tauri.conf.json"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/setup-node@v3

      - name: Disable Updater and related settings for test build
        # testブランチの場合のみ実行 (念のため明示)
        # if: github.ref_name == 'test' # on.push.branches で指定しているので通常は不要だが、より安全
        shell: pwsh
        run: |
          $confPath = "src-tauri\tauri.conf.json"
          Write-Host "Attempting to modify $confPath for test build..."
          $jsonContent = Get-Content -Path $confPath -Raw
          $json = $jsonContent | ConvertFrom-Json

          if ($null -ne $json.plugins -and $null -ne $json.plugins.updater) {
            Write-Host "Removing updater plugin configuration."
            $json.plugins.updater = $null # updaterの設定を削除
          }

          if ($null -ne $json.bundle -and $null -ne $json.bundle.createUpdaterArtifacts) {
              Write-Host "Disabling createUpdaterArtifacts."
              $json.bundle.createUpdaterArtifacts = $false # または $null
          }

          $json | ConvertTo-Json -Depth 100 | Set-Content -Path $confPath
          Write-Host "tauri.conf.json modified for test build."

      - name: Install dependencies and build
        # env: # Updaterを無効化したので署名鍵は不要になる
        #   TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        #   TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        run: |
          npm i
          npm run tauri build

      # GitHub Release作成は test ブランチでは行わない
      # - uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: .\src-tauri\target\release\bundle\msi\Launcherg_${{ steps.variables.outputs.version }}_x64_ja-JP.msi.zip
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     prerelease: true

      # .tauri-updater.json の更新も不要
      # - name: Update .tauri-updater.json
      #   run: |
      #     # ...

      # format files ステップも、更新するファイルがないなら不要
      # - name: format files
      #   run: npx -y prettier .\src-tauri\tauri.conf.json .\.tauri-updater.json --write

      - name: Archive Windows build artifact
        uses: actions/upload-artifact@v4
        with:
          name: launcherg-windows-test-build # アーティファクト名を変更
          # MSIのファイル名パターンは実際の成果物に合わせてください
          # Launcherg_*.msi のようにワイルドカードを使うか、
          # tauri.conf.jsonのversionを固定値として参照するなど
          path: .\src-tauri\target\release\bundle\msi\Launcherg_*.msi
          retention-days: 7 # 保存期間 (オプション)

  # push-changed-files ジョブは test ブランチでは不要
  # push-changed-files:
  #   runs-on: ubuntu-latest
  #   needs: release # needs も修正が必要になる
  #   steps:
  #     # ...